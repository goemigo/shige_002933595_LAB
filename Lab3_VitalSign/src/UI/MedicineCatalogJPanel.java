/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Medicine;
import Model.MedicineCatalog;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author emi
 */
public class MedicineCatalogJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CatalogJPanel
     */
    private Application application;
    DefaultTableModel medTableModel;
    Medicine selectedMedicine;
    
    public MedicineCatalogJPanel() {
        initComponents();
    }

    MedicineCatalogJPanel(Application application) {
        initComponents();
        
        this.application = application;
        this.medTableModel = (DefaultTableModel) medCatalogTable.getModel();
        
        displayMedCatalog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        medCatalogTable = new javax.swing.JTable();
        fieldDosage = new javax.swing.JTextField();
        fieldName = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 204, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        medCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Dosage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(medCatalogTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 330, 310));
        add(fieldDosage, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 110, -1));

        fieldName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldNameFocusLost(evt);
            }
        });
        add(fieldName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 110, -1));

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, -1, -1));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, -1, -1));

        jLabel1.setText("Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        jLabel2.setText("Dosage");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));

        jLabel3.setText("Medicine Catalog");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here: 
        MedicineCatalog catalog = this.application.getCatalog();
        
        String name = fieldName.getText();
        String dosage = fieldDosage.getText();
        
        catalog.createMedicine(name, Double.valueOf(dosage));
        
        JOptionPane.showMessageDialog(null,"Added");
        
        displayMedCatalog();
    }//GEN-LAST:event_addBtnActionPerformed

    private void fieldNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldNameFocusLost
        // TODO add your handling code here:
        String name = fieldName.getText();
        
        Boolean isUnique = this.application.getCatalog().checkIfMedicineUnique(name);
        
        if(isUnique){
            
        }else{
            fieldName.setText("");
            JOptionPane.showMessageDialog(null,"Medine already exists");
        }
    }//GEN-LAST:event_fieldNameFocusLost

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = medCatalogTable.getSelectedRow();
        
        if (selectedRow >= 0){
            //fetch the observation object (column 0 is the id, which has been set as type Object)
            this.selectedMedicine = (Medicine) medCatalogTable.getValueAt(selectedRow, 0);
            
            //delete by name
            this.application.getCatalog().removeMedicine(selectedMedicine.getMedicineName());

        }else{
            JOptionPane.showMessageDialog(null,"Please select a row");
        }
        
        displayMedCatalog();
    }//GEN-LAST:event_deleteBtnActionPerformed

    public void displayMedCatalog(){
        ArrayList<Medicine> medicines = this.application.getCatalog().getMedicineList();
        
        if(medicines.size()>0){
            
            medTableModel.setRowCount(0); //this is to avoid a new record for an update
            
            for (Medicine m: medicines){
//                System.out.println(o.getObservationId());
                Object row[] = new Object[2];
                row[0] = m;
                row[1] = m.getDosage();
  
                this.medTableModel.addRow(row);
            }
        }else{
            System.out.println("Empty list");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField fieldDosage;
    private javax.swing.JTextField fieldName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable medCatalogTable;
    // End of variables declaration//GEN-END:variables
}
